---
- name: Resolve platform specific vars
  ansible.builtin.include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: Check for existing install of {{ thanos_name }}...
  become: true
  ansible.builtin.stat:
    path: '{{ thanos_install_dir }}'
  register: thanos_binary
- name: Downloading and installing thanos
  when: not thanos_binary.stat.exists
  block:
    - name: Download {{ thanos_url }} to {{ thanos_tmp_archive }}
      become: true
      become_user: root
      ansible.builtin.get_url:
        url: '{{ thanos_url }}'
        dest: '{{ thanos_tmp_archive }}'
        mode: '644'
        checksum: sha256:{{ thanos_checksums_url }}
    - name: Installing andrewrothstein.unarchivedeps
      ansible.builtin.include_role:
        name: andrewrothstein.unarchivedeps
    - name: Unarchiving '{{ thanos_tmp_archive }}'
      become: true
      become_user: root
      ansible.builtin.unarchive:
        remote_src: true
        src: '{{ thanos_tmp_archive }}'
        dest: '{{ thanos_parent_install_dir }}'
        creates: '{{ thanos_install_dir }}'
  always:
    - name: Rm -f {{ thanos_tmp_archive }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ thanos_tmp_archive }}'
        state: absent
- name: Create links for {{ thanos_name }}
  become: true
  become_user: root
  with_items: '{{ thanos_links }}'
  ansible.builtin.file:
    src: '{{ thanos_install_dir }}/thanos'
    dest: '{{ thanos_parent_install_dir }}/bin/{{ item }}'
    state: link
